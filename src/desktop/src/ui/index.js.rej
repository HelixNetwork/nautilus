diff a/src/desktop/src/ui/index.js b/src/desktop/src/ui/index.js	(rejected hunks)
@@ -1,6 +1,6 @@
-import React from "react";
-import PropTypes from "prop-types";
-import { connect } from "react-redux";
-import { Switch, Route, withRouter } from "react-router-dom";
-import { withI18n } from "react-i18next";
-import i18next from "libs/i18next";
+import React from 'react';
+import PropTypes from 'prop-types';
+import { connect } from 'react-redux';
+import { Switch, Route, withRouter } from 'react-router-dom';
+import { withI18n } from 'react-i18next';
+import i18next from 'libs/i18next';
@@ -8,12 +8,6 @@ import i18next from "libs/i18next";
-import { updateTheme } from "actions/settings";
-import {
-  setOnboardingComplete,
-  setAccountInfoDuringSetup
-} from "actions/accounts";
-import {
-  getAccountNamesFromState,
-  isSettingUpNewAccount
-} from "selectors/accounts";
-import { fetchNodeList } from "actions/polling";
-import { setPassword, setSeedIndex } from "actions/wallet";
-import { generateAlert } from "actions/alerts";
+import { updateTheme } from 'actions/settings';
+import { setOnboardingComplete, setAccountInfoDuringSetup } from 'actions/accounts';
+import { getAccountNamesFromState, isSettingUpNewAccount } from 'selectors/accounts';
+import { fetchNodeList } from 'actions/polling';
+import { setPassword, setSeedIndex } from 'actions/wallet';
+import { generateAlert } from 'actions/alerts';
@@ -21 +15 @@ import { generateAlert } from "actions/alerts";
-import About from "ui/global/about";
+import About from 'ui/global/about';
@@ -23,7 +17,7 @@ import ErrorLog from 'ui/global/errorLog';
-import Theme from "ui/global/theme";
-import Onboarding from "ui/views/onboarding/index";
-import Wallet from "ui/views/wallet/index";
-import Loading from "ui/components/loading";
-import Settings from "ui/views/settings/index";
-import UpdateWallet from "ui/global/updateWallet";
-import LockWallet from "ui/global/lockWallet";
+import Theme from 'ui/global/theme';
+import Onboarding from 'ui/views/onboarding/index';
+import Wallet from 'ui/views/wallet/index';
+import Loading from 'ui/components/loading';
+import Settings from 'ui/views/settings/index';
+import UpdateWallet from 'ui/global/updateWallet';
+import LockWallet from 'ui/global/lockWallet';
@@ -36,22 +30,17 @@ class App extends React.Component {
-  static propTypes = {
-    history: PropTypes.object.isRequired,
-    t: PropTypes.func.isRequired,
-    themeName: PropTypes.string.isRequired,
-    updateTheme: PropTypes.func.isRequired,
-    locale: PropTypes.string.isRequired,
-    accountNames: PropTypes.array.isRequired,
-    onboardingComplete: PropTypes.bool.isRequired,
-    seedIndex: PropTypes.number.isRequired,
-    hasErrorFetchingFullAccountInfo: PropTypes.bool.isRequired,
-    setOnboardingComplete: PropTypes.func.isRequired,
-    addingAdditionalAccount: PropTypes.bool.isRequired,
-    wallet: PropTypes.object.isRequired,
-    generateAlert: PropTypes.func.isRequired,
-    setPassword: PropTypes.func.isRequired,
-    setSeedIndex: PropTypes.func.isRequired,
-    setAccountInfoDuringSetup: PropTypes.func.isRequired
-  };
-  constructor(props) {
-    super(props);
-    this.state = {
-      fatalError: false
+    static propTypes = {
+        history: PropTypes.object.isRequired,
+        t: PropTypes.func.isRequired,
+        themeName: PropTypes.string.isRequired,
+        updateTheme: PropTypes.func.isRequired,
+        locale: PropTypes.string.isRequired,
+        accountNames: PropTypes.array.isRequired,
+        onboardingComplete: PropTypes.bool.isRequired,
+        seedIndex: PropTypes.number.isRequired,
+        hasErrorFetchingFullAccountInfo: PropTypes.bool.isRequired,
+        setOnboardingComplete: PropTypes.func.isRequired,
+        addingAdditionalAccount: PropTypes.bool.isRequired,
+        wallet: PropTypes.object.isRequired,
+        generateAlert: PropTypes.func.isRequired,
+        setPassword: PropTypes.func.isRequired,
+        setSeedIndex: PropTypes.func.isRequired,
+        setAccountInfoDuringSetup: PropTypes.func.isRequired,
@@ -59,6 +48,6 @@ class App extends React.Component {
-  }
-
-  componentDidMount() {
-    this.onMenuToggle = this.menuToggle.bind(this);
-    this.onAccountSwitch = this.accountSwitch.bind(this);
-    this.props.fetchNodeList();
+    constructor(props) {
+        super(props);
+        this.state = {
+            fatalError: false,
+        };
+    }
@@ -66,5 +55,4 @@ class App extends React.Component {
-    // eslint-disable-next-line no-undef
-    Electron.onEvent("menu", this.onMenuToggle);
-    // eslint-disable-next-line no-undef
-    Electron.changeLanguage(this.props.t);
-  }
+    componentDidMount() {
+        this.onMenuToggle = this.menuToggle.bind(this);
+        this.onAccountSwitch = this.accountSwitch.bind(this);
+        this.props.fetchNodeList();
@@ -72,9 +60,4 @@ class App extends React.Component {
-  /**
-   * Switch to an account based on account name
-   * @param {string} accountName - target account name
-   */
-  accountSwitch(accountName) {
-    const accountIndex = this.props.accountNames.indexOf(accountName);
-    if (accountIndex > -1 && !this.props.isBusy) {
-      this.props.setSeedIndex(accountIndex);
-      this.props.history.push("/wallet");
+        // eslint-disable-next-line no-undef
+        Electron.onEvent('menu', this.onMenuToggle);
+        // eslint-disable-next-line no-undef
+        Electron.changeLanguage(this.props.t);
@@ -82 +64,0 @@ class App extends React.Component {
-  }
@@ -84,6 +66,11 @@ class App extends React.Component {
-  componentWillUnmount() {
-    // eslint-disable-next-line no-undef
-    Electron.removeEvent("menu", this.onMenuToggle);
-    // eslint-disable-next-line no-undef
-    Electron.removeEvent("account.switch", this.onAccountSwitch);
-  }
+    /**
+     * Switch to an account based on account name
+     * @param {string} accountName - target account name
+     */
+    accountSwitch(accountName) {
+        const accountIndex = this.props.accountNames.indexOf(accountName);
+        if (accountIndex > -1 && !this.props.isBusy) {
+            this.props.setSeedIndex(accountIndex);
+            this.props.history.push('/wallet');
+        }
+    }
@@ -91,4 +78,5 @@ class App extends React.Component {
-  componentWillReceiveProps(nextProps) {
-    // On language change
-    if (nextProps.locale !== this.props.locale) {
-      i18next.changeLanguage(nextProps.locale);
+    componentWillUnmount() {
+        // eslint-disable-next-line no-undef
+        Electron.removeEvent('menu', this.onMenuToggle);
+        // eslint-disable-next-line no-undef
+        Electron.removeEvent('account.switch', this.onAccountSwitch);
@@ -96,26 +84,26 @@ class App extends React.Component {
-    const currentKey = this.props.location.pathname.split("/")[1] || "/";
-    if (
-      nextProps.hasErrorFetchingFullAccountInfo &&
-      !this.props.hasErrorFetchingFullAccountInfo
-    ) {
-      if (nextProps.accountNames.length === 0) {
-        // Reset state password on unsuccessful first account info fetch
-        this.props.setPassword({});
-      } else {
-        // Mark Onboarding as incomplete on unsuccessful additional account info fetch
-        this.props.setAccountInfoDuringSetup({
-          completed: false
-        });
-        this.props.history.push("/onboarding/account-name");
-      }
-    } else if (
-      !this.props.wallet.ready &&
-      nextProps.wallet.ready &&
-      currentKey === "onboarding"
-    ) {
-      // eslint-disable-next-line no-undef
-      Electron.setOnboardingSeed(null);
-      if (!this.props.onboardingComplete) {
-        this.props.setOnboardingComplete(true);
-      }
-      this.props.history.push("/wallet/");
+
+    componentWillReceiveProps(nextProps) {
+        // On language change
+        if (nextProps.locale !== this.props.locale) {
+            i18next.changeLanguage(nextProps.locale);
+        }
+        const currentKey = this.props.location.pathname.split('/')[1] || '/';
+        if (nextProps.hasErrorFetchingFullAccountInfo && !this.props.hasErrorFetchingFullAccountInfo) {
+            if (nextProps.accountNames.length === 0) {
+                // Reset state password on unsuccessful first account info fetch
+                this.props.setPassword({});
+            } else {
+                // Mark Onboarding as incomplete on unsuccessful additional account info fetch
+                this.props.setAccountInfoDuringSetup({
+                    completed: false,
+                });
+                this.props.history.push('/onboarding/account-name');
+            }
+        } else if (!this.props.wallet.ready && nextProps.wallet.ready && currentKey === 'onboarding') {
+            // eslint-disable-next-line no-undef
+            Electron.setOnboardingSeed(null);
+            if (!this.props.onboardingComplete) {
+                this.props.setOnboardingComplete(true);
+            }
+            this.props.history.push('/wallet/');
+        }
@@ -123 +110,0 @@ class App extends React.Component {
-  }
@@ -125,8 +112,3 @@ class App extends React.Component {
-  Init = props => {
-    return (
-      <Loading
-        loop={false}
-        onEnd={() => this.props.history.push("/onboarding/")}
-      />
-    );
-  };
+    Init = (props) => {
+        return <Loading loop={false} onEnd={() => this.props.history.push('/onboarding/')} />;
+    };
@@ -134,36 +116,38 @@ class App extends React.Component {
-  /**
-   * Proxy native menu triggers to an action
-   * @param {string} item - Triggered menu item
-   */
-  menuToggle(item) {
-    if (!item) {
-      return;
-    }
-    switch (item) {
-      case "about":
-        break;
-      case "errorlog":
-        break;
-      case "feedback":
-        break;
-      case "addAccount":
-        this.props.history.push("/onboarding/seed-intro");
-        break;
-      case "logout":
-        this.props.clearWalletData();
-        this.props.setPassword({});
-        this.props.setAccountInfoDuringSetup({
-          name: "",
-          meta: {},
-          completed: false,
-          usedExistingSeed: false
-        });
-        // eslint-disable-next-line no-undef
-        Electron.setOnboardingSeed(null);
-        this.props.history.push("/onboarding/login");
-        break;
-      default:
-        if (item.indexOf("settings/account") === 0) {
-          this.props.history.push(`/${item}/${this.props.seedIndex}`);
-        } else {
-          this.props.history.push(`/${item}`);
+    /**
+     * Proxy native menu triggers to an action
+     * @param {string} item - Triggered menu item
+     */
+    menuToggle(item) {
+        if (!item) {
+            return;
+        }
+        switch (item) {
+            case 'about':
+                break;
+            case 'errorlog':
+                break;
+            case 'feedback':
+                break;
+            case 'addAccount':
+                this.props.history.push('/onboarding/seed-intro');
+                break;
+            case 'logout':
+                this.props.clearWalletData();
+                this.props.setPassword({});
+                this.props.setAccountInfoDuringSetup({
+                    name: '',
+                    meta: {},
+                    completed: false,
+                    usedExistingSeed: false,
+                });
+                // eslint-disable-next-line no-undef
+                Electron.setOnboardingSeed(null);
+                this.props.history.push('/onboarding/login');
+                break;
+            default:
+                if (item.indexOf('settings/account') === 0) {
+                    this.props.history.push(`/${item}/${this.props.seedIndex}`);
+                } else {
+                    this.props.history.push(`/${item}`);
+                }
+                break;
@@ -171 +154,0 @@ class App extends React.Component {
-        break;
@@ -173 +155,0 @@ class App extends React.Component {
-  }
@@ -175,14 +157,27 @@ class App extends React.Component {
-  render() {
-    const { location, history } = this.props;
-    const { fatalError } = this.state;
-    const currentKey = location.pathname.split("/")[1] || "/";
-    if (
-      fatalError &&
-      (fatalError === "Found old data" && currentKey !== "settings")
-    ) {
-      return (
-        <div>
-          <Theme history={history} />
-          <FatalError error={fatalError} history={history} />
-        </div>
-      );
+    render() {
+        const { location, history } = this.props;
+        const { fatalError } = this.state;
+        const currentKey = location.pathname.split('/')[1] || '/';
+        if (fatalError && (fatalError === 'Found old data' && currentKey !== 'settings')) {
+            return (
+                <div>
+                    <Theme history={history} />
+                    <FatalError error={fatalError} history={history} />
+                </div>
+            );
+        }
+        return (
+            <div>
+                <About />
+                <ErrorLog />
+                <LockWallet></LockWallet>
+                <UpdateWallet />
+                <Theme history={history} />
+                <Switch>
+                    <Route path="/wallet" component={Wallet} />
+                    <Route path="/onboarding" component={Onboarding} />
+                    <Route exact path="/settings/:setting?/:subsetting?/:accountIndex?" component={Settings} />
+                    <Route exact path="/" loop={false} component={this.Init} />
+                </Switch>
+            </div>
+        );
@@ -190,20 +184,0 @@ class App extends React.Component {
-    return (
-      <div>
-        <About />
-        <ErrorLog />
-        <LockWallet></LockWallet>
-        <UpdateWallet />
-        <Theme history={history} />
-        <Switch>
-          <Route path="/wallet" component={Wallet} />
-          <Route path="/onboarding" component={Onboarding} />
-          <Route
-            exact
-            path="/settings/:setting?/:subsetting?/:accountIndex?"
-            component={Settings}
-          />
-          <Route exact path="/" loop={false} component={this.Init} />
-        </Switch>
-      </div>
-    );
-  }
@@ -212,9 +187,9 @@ class App extends React.Component {
-const mapStateToProps = state => ({
-  locale: state.settings.locale,
-  themeName: state.settings.themeName,
-  accountNames: getAccountNamesFromState(state),
-  addingAdditionalAccount: isSettingUpNewAccount(state),
-  wallet: state.wallet,
-  onboardingComplete: state.accounts.onboardingComplete,
-  hasErrorFetchingFullAccountInfo: state.ui.hasErrorFetchingFullAccountInfo,
-  seedIndex: state.wallet.seedIndex
+const mapStateToProps = (state) => ({
+    locale: state.settings.locale,
+    themeName: state.settings.themeName,
+    accountNames: getAccountNamesFromState(state),
+    addingAdditionalAccount: isSettingUpNewAccount(state),
+    wallet: state.wallet,
+    onboardingComplete: state.accounts.onboardingComplete,
+    hasErrorFetchingFullAccountInfo: state.ui.hasErrorFetchingFullAccountInfo,
+    seedIndex: state.wallet.seedIndex,
@@ -224,7 +199,7 @@ const mapDispatchToProps = {
-  setPassword,
-  updateTheme,
-  setOnboardingComplete,
-  setAccountInfoDuringSetup,
-  fetchNodeList,
-  setSeedIndex,
-  generateAlert
+    setPassword,
+    updateTheme,
+    setOnboardingComplete,
+    setAccountInfoDuringSetup,
+    fetchNodeList,
+    setSeedIndex,
+    generateAlert,
@@ -234,4 +209,4 @@ export default withRouter(
-  connect(
-    mapStateToProps,
-    mapDispatchToProps
-  )(withI18n()(App))
+    connect(
+        mapStateToProps,
+        mapDispatchToProps,
+    )(withI18n()(App)),
