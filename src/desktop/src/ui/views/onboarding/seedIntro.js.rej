diff a/src/desktop/src/ui/views/onboarding/seedIntro.js b/src/desktop/src/ui/views/onboarding/seedIntro.js	(rejected hunks)
@@ -1,10 +1,10 @@
-import React from "react";
-import { connect } from "react-redux";
-import classNames from "classnames";
-import PropTypes from "prop-types";
-import { withI18n } from "react-i18next";
-import image from "ui/images/danger.svg";
-
-import { setAccountInfoDuringSetup } from "actions/accounts";
-import Button from "ui/components/button";
-import css from "./index.scss";
+import React from 'react';
+import { connect } from 'react-redux';
+import classNames from 'classnames';
+import PropTypes from 'prop-types';
+import { withI18n } from 'react-i18next';
+import image from 'ui/images/danger.svg';
+
+import { setAccountInfoDuringSetup } from 'actions/accounts';
+import Button from 'ui/components/button';
+import css from './index.scss';
@@ -13,72 +13,60 @@ class SeedIntro extends React.PureComponent {
-  static propTypes = {
-    history: PropTypes.object,
-    t: PropTypes.func.isRequired,
-    setAccountInfoDuringSetup: PropTypes.func.isRequired
-  };
-
-  state = {
-    ledger: false
-  };
-
-  componentDidMount() {
-    // eslint-disable-next-line no-undef
-    Electron.setOnboardingSeed(null);
-  }
-
-  stepForward(route, existingSeed) {
-    this.props.setAccountInfoDuringSetup({
-      meta: { type: "keychain" },
-      usedExistingSeed: existingSeed
-    });
-
-    this.props.history.push(`/onboarding/${route}`);
-  }
-
-  render() {
-    const { t } = this.props;
-
-    return (
-      <div>
-        <Row style={{marginTop:'3vw'}}>
-          <h1>
-            {t("walletSetup:doYouNeedASeed")}
-            <span className={classNames(css.text_color)}>
-              {" "}
-              {t("walletSetup:seed")}{" "}
-            </span>
-            ?
-                </h1>
-        </Row>
-
-        <Row className={css.centerBox}>
-
-
-
-          <img src={image} alt="" />
-          <h5>{t("walletSetup:helixSeedIsAccess")}</h5>
-          <h6 style={{ color: "#F0F2F6" }}>
-            {t("walletSetup:explanation")}
-          </h6>
-
-
-        </Row>
-        <Row>
-          <Button
-            className="navleft"
-            variant="backgroundNone"
-            onClick={() => this.stepForward("seed-import", true)}
-          >
-            {t("newSeedSetup:loginWithYourSeed")} <span>></span>
-          </Button>
-          <Button
-            className="navright"
-            variant="backgroundNone"
-            onClick={() => this.stepForward("seed-generate", false)}
-          >
-            {t("newSeedSetup:createSeed")} <span>></span>
-          </Button>
-        </Row>
-
-      </div>
-    );
-  }
+    static propTypes = {
+        history: PropTypes.object,
+        t: PropTypes.func.isRequired,
+        setAccountInfoDuringSetup: PropTypes.func.isRequired,
+    };
+
+    state = {
+        ledger: false,
+    };
+
+    componentDidMount() {
+        // eslint-disable-next-line no-undef
+        Electron.setOnboardingSeed(null);
+    }
+
+    stepForward(route, existingSeed) {
+        this.props.setAccountInfoDuringSetup({
+            meta: { type: 'keychain' },
+            usedExistingSeed: existingSeed,
+        });
+
+        this.props.history.push(`/onboarding/${route}`);
+    }
+
+    render() {
+        const { t } = this.props;
+
+        return (
+            <div>
+                <Row style={{ marginTop: '3vw' }}>
+                    <h1>
+                        {t('walletSetup:doYouNeedASeed')}
+                        <span className={classNames(css.text_color)}> {t('walletSetup:seed')} </span>?
+                    </h1>
+                </Row>
+
+                <Row className={css.centerBox}>
+                    <img src={image} alt="" />
+                    <h5>{t('walletSetup:helixSeedIsAccess')}</h5>
+                    <h6 style={{ color: '#F0F2F6' }}>{t('walletSetup:explanation')}</h6>
+                </Row>
+                <Row>
+                    <Button
+                        className="navleft"
+                        variant="backgroundNone"
+                        onClick={() => this.stepForward('seed-import', true)}
+                    >
+                        {t('newSeedSetup:loginWithYourSeed')} <span>></span>
+                    </Button>
+                    <Button
+                        className="navright"
+                        variant="backgroundNone"
+                        onClick={() => this.stepForward('seed-generate', false)}
+                    >
+                        {t('newSeedSetup:createSeed')} <span>></span>
+                    </Button>
+                </Row>
+            </div>
+        );
+    }
@@ -88 +76 @@ const mapDispatchToProps = {
-  setAccountInfoDuringSetup
+    setAccountInfoDuringSetup,
@@ -92,2 +80,2 @@ export default connect(
-  null,
-  mapDispatchToProps
+    null,
+    mapDispatchToProps,
