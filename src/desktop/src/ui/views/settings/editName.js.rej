diff a/src/desktop/src/ui/views/settings/editName.js b/src/desktop/src/ui/views/settings/editName.js	(rejected hunks)
@@ -1,4 +1,4 @@
-import React from "react";
-import PropTypes from "prop-types";
-import { withI18n } from "react-i18next";
-import { connect } from "react-redux";
+import React from 'react';
+import PropTypes from 'prop-types';
+import { withI18n } from 'react-i18next';
+import { connect } from 'react-redux';
@@ -6,2 +6,2 @@ import { connect } from "react-redux";
-import { MAX_ACC_LENGTH } from "libs/crypto";
-import SeedStore from "libs/seed";
+import { MAX_ACC_LENGTH } from 'libs/crypto';
+import SeedStore from 'libs/seed';
@@ -9 +9 @@ import SeedStore from "libs/seed";
-import { selectAccountInfo, getSelectedAccountName } from "selectors/accounts";
+import { selectAccountInfo, getSelectedAccountName } from 'selectors/accounts';
@@ -11,7 +11,7 @@ import { selectAccountInfo, getSelectedAccountName } from "selectors/accounts";
-import css from "./settings.scss";
-import classNames from "classnames";
-import Button from "ui/components/button";
-import Text from "ui/components/input/text";
-import { generateAlert } from "actions/alerts";
-import { changeAccountName } from "actions/accounts";
-import { getAccountNamesFromState } from "selectors/accounts";
+import css from './settings.scss';
+import classNames from 'classnames';
+import Button from 'ui/components/button';
+import Text from 'ui/components/input/text';
+import { generateAlert } from 'actions/alerts';
+import { changeAccountName } from 'actions/accounts';
+import { getAccountNamesFromState } from 'selectors/accounts';
@@ -23,18 +23,18 @@ class AccountName extends React.PureComponent {
-  static propTypes = {
-    /** @ignore */
-    accountNames: PropTypes.array.isRequired,
-    /** @ignore */
-    account: PropTypes.object.isRequired,
-    /** @ignore */
-    password: PropTypes.object.isRequired,
-    /** @ignore */
-    changeAccountName: PropTypes.func.isRequired,
-    /** @ignore */
-    generateAlert: PropTypes.func.isRequired,
-    location: PropTypes.object,
-    history: PropTypes.shape({
-      push: PropTypes.func.isRequired
-    }).isRequired,
-    t: PropTypes.func.isRequired,
-    accountName: PropTypes.string.isRequired
-  };
+    static propTypes = {
+        /** @ignore */
+        accountNames: PropTypes.array.isRequired,
+        /** @ignore */
+        account: PropTypes.object.isRequired,
+        /** @ignore */
+        password: PropTypes.object.isRequired,
+        /** @ignore */
+        changeAccountName: PropTypes.func.isRequired,
+        /** @ignore */
+        generateAlert: PropTypes.func.isRequired,
+        location: PropTypes.object,
+        history: PropTypes.shape({
+            push: PropTypes.func.isRequired,
+        }).isRequired,
+        t: PropTypes.func.isRequired,
+        accountName: PropTypes.string.isRequired,
+    };
@@ -42,3 +42,3 @@ class AccountName extends React.PureComponent {
-  state = {
-    newAccountName: this.props.accountName
-  };
+    state = {
+        newAccountName: this.props.accountName,
+    };
@@ -46,15 +46,7 @@ class AccountName extends React.PureComponent {
-  /**
-   * Check for unique account name and change account name in wallet state and in Seedstore object
-   * @returns {undefined}
-   **/
-  async setAccountName() {
-    const {
-      account,
-      accountNames,
-      password,
-      changeAccountName,
-      generateAlert,
-      t,
-      accountName
-    } = this.props;
-    const newAccountName = this.state.newAccountName.replace(/^\s+|\s+$/g, "");
+    /**
+     * Check for unique account name and change account name in wallet state and in Seedstore object
+     * @returns {undefined}
+     **/
+    async setAccountName() {
+        const { account, accountNames, password, changeAccountName, generateAlert, t, accountName } = this.props;
+        const newAccountName = this.state.newAccountName.replace(/^\s+|\s+$/g, '');
@@ -62,8 +54,4 @@ class AccountName extends React.PureComponent {
-    if (newAccountName.length < 1) {
-      generateAlert(
-        "error",
-        t("addAdditionalSeed:noNickname"),
-        t("addAdditionalSeed:noNicknameExplanation")
-      );
-      return;
-    }
+        if (newAccountName.length < 1) {
+            generateAlert('error', t('addAdditionalSeed:noNickname'), t('addAdditionalSeed:noNicknameExplanation'));
+            return;
+        }
@@ -71,10 +59,10 @@ class AccountName extends React.PureComponent {
-    if (newAccountName.length > MAX_ACC_LENGTH) {
-      generateAlert(
-        "error",
-        t("addAdditionalSeed:accountNameTooLong"),
-        t("addAdditionalSeed:accountNameTooLongExplanation", {
-          maxLength: MAX_ACC_LENGTH
-        })
-      );
-      return;
-    }
+        if (newAccountName.length > MAX_ACC_LENGTH) {
+            generateAlert(
+                'error',
+                t('addAdditionalSeed:accountNameTooLong'),
+                t('addAdditionalSeed:accountNameTooLongExplanation', {
+                    maxLength: MAX_ACC_LENGTH,
+                }),
+            );
+            return;
+        }
@@ -82,12 +70,4 @@ class AccountName extends React.PureComponent {
-    if (
-      accountNames
-        .map(name => name.toLowerCase())
-        .indexOf(newAccountName.toLowerCase()) > -1
-    ) {
-      generateAlert(
-        "error",
-        t("addAdditionalSeed:nameInUse"),
-        t("addAdditionalSeed:nameInUseExplanation")
-      );
-      return;
-    }
+        if (accountNames.map((name) => name.toLowerCase()).indexOf(newAccountName.toLowerCase()) > -1) {
+            generateAlert('error', t('addAdditionalSeed:nameInUse'), t('addAdditionalSeed:nameInUseExplanation'));
+            return;
+        }
@@ -95,5 +75 @@ class AccountName extends React.PureComponent {
-    generateAlert(
-      "success",
-      t("settings:nicknameChanged"),
-      t("settings:nicknameChangedExplanation")
-    );
+        generateAlert('success', t('settings:nicknameChanged'), t('settings:nicknameChangedExplanation'));
@@ -101,4 +77,4 @@ class AccountName extends React.PureComponent {
-    changeAccountName({
-      oldAccountName: accountName,
-      newAccountName
-    });
+        changeAccountName({
+            oldAccountName: accountName,
+            newAccountName,
+        });
@@ -106,39 +82,33 @@ class AccountName extends React.PureComponent {
-    const seedStore = await new SeedStore[account.meta.type](
-      password,
-      accountName,
-      account.meta
-    );
-    await seedStore.renameAccount(newAccountName);
-  }
-  render() {
-    const { t, accountName } = this.props;
-    const { newAccountName } = this.state;
-    return (
-      <div className={classNames(css.foo_bxx12)}>
-        <div className={classNames(css.set_bxac)}>
-          <form
-            style={{ marginTop: "7vw" }}
-            onSubmit={e => {
-              e.preventDefault();
-              this.setAccountName();
-            }}
-          >
-            <Text
-              value={newAccountName}
-              label={t("accountManagement:editAccountName")}
-              onChange={value => this.setState({ newAccountName: value })}
-            />
-            <Button
-              type="submit"
-              style={{ marginLeft: "28vw", marginTop: "4vw" }}
-              disabled={
-                newAccountName.replace(/^\s+|\s+$/g, "") === accountName
-              }
-            >
-              {t("global:save")}
-            </Button>
-          </form>
-        </div>
-      </div>
-    );
-  }
+        const seedStore = await new SeedStore[account.meta.type](password, accountName, account.meta);
+        await seedStore.renameAccount(newAccountName);
+    }
+    render() {
+        const { t, accountName } = this.props;
+        const { newAccountName } = this.state;
+        return (
+            <div className={classNames(css.foo_bxx12)}>
+                <div className={classNames(css.set_bxac)}>
+                    <form
+                        style={{ marginTop: '7vw' }}
+                        onSubmit={(e) => {
+                            e.preventDefault();
+                            this.setAccountName();
+                        }}
+                    >
+                        <Text
+                            value={newAccountName}
+                            label={t('accountManagement:editAccountName')}
+                            onChange={(value) => this.setState({ newAccountName: value })}
+                        />
+                        <Button
+                            type="submit"
+                            style={{ marginLeft: '28vw', marginTop: '4vw' }}
+                            disabled={newAccountName.replace(/^\s+|\s+$/g, '') === accountName}
+                        >
+                            {t('global:save')}
+                        </Button>
+                    </form>
+                </div>
+            </div>
+        );
+    }
@@ -147,5 +117,5 @@ class AccountName extends React.PureComponent {
-const mapStateToProps = state => ({
-  accountNames: getAccountNamesFromState(state),
-  password: state.wallet.password,
-  account: selectAccountInfo(state),
-  accountName: getSelectedAccountName(state)
+const mapStateToProps = (state) => ({
+    accountNames: getAccountNamesFromState(state),
+    password: state.wallet.password,
+    account: selectAccountInfo(state),
+    accountName: getSelectedAccountName(state),
@@ -155,2 +125,2 @@ const mapDispatchToProps = {
-  changeAccountName,
-  generateAlert
+    changeAccountName,
+    generateAlert,
@@ -160,2 +130,2 @@ export default connect(
-  mapStateToProps,
-  mapDispatchToProps
+    mapStateToProps,
+    mapDispatchToProps,
