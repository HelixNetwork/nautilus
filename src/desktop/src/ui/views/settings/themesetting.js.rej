diff a/src/desktop/src/ui/views/settings/themesetting.js b/src/desktop/src/ui/views/settings/themesetting.js	(rejected hunks)
@@ -1,10 +1,10 @@
-import React from "react";
-import css from "./settings.scss";
-import classNames from "classnames";
-import PropTypes from "prop-types";
-import { withI18n } from "react-i18next";
-import { connect } from "react-redux";
-import themes from "themes/themes";
-import Button from "ui/components/button";
-import Select from "ui/components/input/select";
-import { updateTheme } from "actions/settings";
+import React from 'react';
+import css from './settings.scss';
+import classNames from 'classnames';
+import PropTypes from 'prop-types';
+import { withI18n } from 'react-i18next';
+import { connect } from 'react-redux';
+import themes from 'themes/themes';
+import Button from 'ui/components/button';
+import Select from 'ui/components/input/select';
+import { updateTheme } from 'actions/settings';
@@ -17,13 +17,13 @@ class SettingsTheme extends React.PureComponent {
-  static propTypes = {
-    location: PropTypes.object,
-    history: PropTypes.shape({
-      push: PropTypes.func.isRequired
-    }).isRequired,
-    t: PropTypes.func.isRequired
-  };
-  state = {
-    themeName: null
-  };
-  render() {
-    const { updateTheme, t } = this.props;
-    const { themeName } = this.state;
+    static propTypes = {
+        location: PropTypes.object,
+        history: PropTypes.shape({
+            push: PropTypes.func.isRequired,
+        }).isRequired,
+        t: PropTypes.func.isRequired,
+    };
+    state = {
+        themeName: null,
+    };
+    render() {
+        const { updateTheme, t } = this.props;
+        const { themeName } = this.state;
@@ -31,42 +31,38 @@ class SettingsTheme extends React.PureComponent {
-    return (
-      <div className={classNames(css.foo_bxx12)}>
-        <form
-          style={{ marginTop: "7vw" }}
-          onSubmit={e => {
-            e.preventDefault();
-            if (themeName) {
-              document.body.style.background = themes[themeName].body.bg;
-              updateTheme(themeName);
-            }
-          }}
-        >
-          <Select
-            label={t("settings:theme")}
-            value={themeName || this.props.themeName}
-            valueLabel={t(
-              `themes:${
-                themeName
-                  ? themeName.toLowerCase()
-                  : this.props.themeName.toLowerCase()
-              }`
-            )}
-            onChange={value => this.setState({ themeName: value })}
-            options={Object.keys(themes).map(item => {
-              return {
-                value: item,
-                label: t(`themes:${item.toLowerCase()}`)
-              };
-            })}
-          />
-          <Button
-            style={{ marginLeft: "31vw", marginTop: "4vw" }}
-            type="submit"
-            disabled={!themeName || themeName === this.props.themeName}
-          >
-            {t("global:save")}
-          </Button>
-          <div className={classNames(css.spe_bx)}></div>
-        </form>
-      </div>
-    );
-  }
+        return (
+            <div className={classNames(css.foo_bxx12)}>
+                <form
+                    style={{ marginTop: '7vw' }}
+                    onSubmit={(e) => {
+                        e.preventDefault();
+                        if (themeName) {
+                            document.body.style.background = themes[themeName].body.bg;
+                            updateTheme(themeName);
+                        }
+                    }}
+                >
+                    <Select
+                        label={t('settings:theme')}
+                        value={themeName || this.props.themeName}
+                        valueLabel={t(
+                            `themes:${themeName ? themeName.toLowerCase() : this.props.themeName.toLowerCase()}`,
+                        )}
+                        onChange={(value) => this.setState({ themeName: value })}
+                        options={Object.keys(themes).map((item) => {
+                            return {
+                                value: item,
+                                label: t(`themes:${item.toLowerCase()}`),
+                            };
+                        })}
+                    />
+                    <Button
+                        style={{ marginLeft: '31vw', marginTop: '4vw' }}
+                        type="submit"
+                        disabled={!themeName || themeName === this.props.themeName}
+                    >
+                        {t('global:save')}
+                    </Button>
+                    <div className={classNames(css.spe_bx)}></div>
+                </form>
+            </div>
+        );
+    }
@@ -74,2 +70,2 @@ class SettingsTheme extends React.PureComponent {
-const mapStateToProps = state => ({
-  themeName: state.settings.themeName
+const mapStateToProps = (state) => ({
+    themeName: state.settings.themeName,
@@ -79 +75 @@ const mapDispatchToProps = {
-  updateTheme
+    updateTheme,
@@ -82,2 +78,2 @@ export default connect(
-  mapStateToProps,
-  mapDispatchToProps
+    mapStateToProps,
+    mapDispatchToProps,
