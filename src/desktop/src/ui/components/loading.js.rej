diff a/src/desktop/src/ui/components/loading.js b/src/desktop/src/ui/components/loading.js	(rejected hunks)
@@ -1,5 +1,5 @@
-import React from "react";
-import PropTypes from "prop-types";
-import Logo from "ui/components/logo";
-import css from "./loading.scss";
-import classNames from "classnames";
+import React from 'react';
+import PropTypes from 'prop-types';
+import Logo from 'ui/components/logo';
+import css from './loading.scss';
+import classNames from 'classnames';
@@ -8,24 +8,18 @@ export default class Loading extends React.PureComponent {
-  static propTypes = {
-    /** Should animation loop */
-    loop: PropTypes.bool,
-    /** Should component have inline class */
-    inline: PropTypes.bool,
-    /** Should component have transparent class */
-    transparent: PropTypes.bool,
-    /** On animation end event callback */
-    onEnd: PropTypes.func
-  };
-  render() {
-    const { loop, inline, transparent, onEnd } = this.props;
-    return (
-      <div
-        className={classNames(
-          css.loading,
-          inline ? css.inline : null,
-          transparent ? css.transparent : null
-        )}
-      >
-        <Logo size={300} animate loop={loop} onEnd={onEnd}></Logo>
-      </div>
-    );
-  }
+    static propTypes = {
+        /** Should animation loop */
+        loop: PropTypes.bool,
+        /** Should component have inline class */
+        inline: PropTypes.bool,
+        /** Should component have transparent class */
+        transparent: PropTypes.bool,
+        /** On animation end event callback */
+        onEnd: PropTypes.func,
+    };
+    render() {
+        const { loop, inline, transparent, onEnd } = this.props;
+        return (
+            <div className={classNames(css.loading, inline ? css.inline : null, transparent ? css.transparent : null)}>
+                <Logo size={300} animate loop={loop} onEnd={onEnd}></Logo>
+            </div>
+        );
+    }
