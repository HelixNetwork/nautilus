diff a/src/desktop/src/ui/components/input/password.js b/src/desktop/src/ui/components/input/password.js	(rejected hunks)
@@ -1,5 +1,5 @@
-import React from "react";
-import PropTypes from "prop-types";
-import classNames from "classnames";
-import { withI18n } from "react-i18next";
-import { zxcvbn } from "libs/exports";
+import React from 'react';
+import PropTypes from 'prop-types';
+import classNames from 'classnames';
+import { withI18n } from 'react-i18next';
+import { zxcvbn } from 'libs/exports';
@@ -7 +7 @@ import { zxcvbn } from "libs/exports";
-import { passwordReasons } from "libs/password";
+import { passwordReasons } from 'libs/password';
@@ -9,2 +9,2 @@ import { passwordReasons } from "libs/password";
-import Icon from "ui/components/icon";
-import css from "./input.scss";
+import Icon from 'ui/components/icon';
+import css from './input.scss';
@@ -16,25 +16,25 @@ class PasswordInput extends React.PureComponent {
-  static propTypes = {
-    /** Current password value */
-    value: PropTypes.string.isRequired,
-    /** Should input focus when changed to true */
-    focus: PropTypes.bool,
-    /** Is the component disabled */
-    disabled: PropTypes.bool,
-    /** Should input show the password strength score */
-    showScore: PropTypes.bool,
-    /** Should input show the validation checkmark */
-    showValid: PropTypes.bool,
-    /** Should the input match a string */
-    match: PropTypes.string,
-    /** Password input label */
-    label: PropTypes.string.isRequired,
-    /** Password change event function
-     * @param {string} value - Current password value
-     */
-    onChange: PropTypes.func.isRequired,
-    /** Translation helper
-     * @param {string} translationString - locale string identifier to be translated
-     * @ignore
-     */
-    t: PropTypes.func.isRequired
-  };
+    static propTypes = {
+        /** Current password value */
+        value: PropTypes.string.isRequired,
+        /** Should input focus when changed to true */
+        focus: PropTypes.bool,
+        /** Is the component disabled */
+        disabled: PropTypes.bool,
+        /** Should input show the password strength score */
+        showScore: PropTypes.bool,
+        /** Should input show the validation checkmark */
+        showValid: PropTypes.bool,
+        /** Should the input match a string */
+        match: PropTypes.string,
+        /** Password input label */
+        label: PropTypes.string.isRequired,
+        /** Password change event function
+         * @param {string} value - Current password value
+         */
+        onChange: PropTypes.func.isRequired,
+        /** Translation helper
+         * @param {string} translationString - locale string identifier to be translated
+         * @ignore
+         */
+        t: PropTypes.func.isRequired,
+    };
@@ -42,4 +42,4 @@ class PasswordInput extends React.PureComponent {
-  state = {
-    hidden: true,
-    capsLock: false
-  };
+    state = {
+        hidden: true,
+        capsLock: false,
+    };
@@ -47,3 +47,7 @@ class PasswordInput extends React.PureComponent {
-  componentDidMount() {
-    if (this.props.focus) {
-      this.input.focus();
+    componentDidMount() {
+        if (this.props.focus) {
+            this.input.focus();
+        }
+        this.onKey = this.setCapsLock.bind(this);
+        window.addEventListener('keydown', this.onKey);
+        window.addEventListener('keyup', this.onKey);
@@ -51,4 +54,0 @@ class PasswordInput extends React.PureComponent {
-    this.onKey = this.setCapsLock.bind(this);
-    window.addEventListener("keydown", this.onKey);
-    window.addEventListener("keyup", this.onKey);
-  }
@@ -56,3 +56,4 @@ class PasswordInput extends React.PureComponent {
-  componentWillReceiveProps(nextProps) {
-    if (!this.props.focus && nextProps.focus) {
-      this.input.focus();
+    componentWillReceiveProps(nextProps) {
+        if (!this.props.focus && nextProps.focus) {
+            this.input.focus();
+        }
@@ -60 +60,0 @@ class PasswordInput extends React.PureComponent {
-  }
@@ -62,4 +62,4 @@ class PasswordInput extends React.PureComponent {
-  componentWillUnmount() {
-    window.removeEventListener("keydown", this.onKey);
-    window.removeEventListener("keyup", this.onKey);
-  }
+    componentWillUnmount() {
+        window.removeEventListener('keydown', this.onKey);
+        window.removeEventListener('keyup', this.onKey);
+    }
@@ -67,5 +67,5 @@ class PasswordInput extends React.PureComponent {
-  setVisibility = () => {
-    this.setState(prevState => ({
-      hidden: !prevState.hidden
-    }));
-  };
+    setVisibility = () => {
+        this.setState((prevState) => ({
+            hidden: !prevState.hidden,
+        }));
+    };
@@ -73,5 +73,5 @@ class PasswordInput extends React.PureComponent {
-  setCapsLock = e => {
-    this.setState({
-      capsLock: e.getModifierState("CapsLock")
-    });
-  };
+    setCapsLock = (e) => {
+        this.setState({
+            capsLock: e.getModifierState('CapsLock'),
+        });
+    };
@@ -79,12 +79,3 @@ class PasswordInput extends React.PureComponent {
-  render() {
-    const {
-      label,
-      value,
-      disabled,
-      onChange,
-      showScore,
-      showValid,
-      match,
-      t
-    } = this.props;
-    const { hidden, capsLock } = this.state;
+    render() {
+        const { label, value, disabled, onChange, showScore, showValid, match, t } = this.props;
+        const { hidden, capsLock } = this.state;
@@ -92,52 +83,3 @@ class PasswordInput extends React.PureComponent {
-    const score = zxcvbn(value);
-    const isValid =
-      score.score === 4 && (typeof match !== "string" || match === value);
-    return (
-      <div
-        className={classNames(
-          css.input,
-          css.padded,
-          disabled ? css.disabled : null,
-          capsLock ? css.capsLock : null
-        )}
-        style={this.props.style ? this.props.style : {}}
-      >
-        <fieldset>
-          <a
-            className={hidden ? css.strike : null}
-            onClick={this.setVisibility}
-          >
-            <Icon icon="eye" size={16} />
-          </a>
-          <input
-            type={hidden ? "password" : "text"}
-            ref={input => {
-              this.input = input;
-            }}
-            value={value}
-            onClick={this.setCapsLock}
-            onKeyDown={this.setCapsLock}
-            onChange={e => onChange(e.target.value)}
-          />
-          <small>{label}</small>
-          <strong>
-            {/* <Icon icon="attention" size={14} /> */}
-            {t("capsLockIsOn")}
-          </strong>
-          {showScore ? (
-            <React.Fragment>
-              <div className={css.score} data-strength={score.score}>
-                <span />
-                <span />
-                <span />
-              </div>
-              {value.length > 8 && passwordReasons[score.feedback.warning] ? (
-                <div className={css.hint}>
-                  {t(
-                    `changePassword:${passwordReasons[score.feedback.warning]}`
-                  )}
-                </div>
-              ) : null}
-            </React.Fragment>
-          ) : null}
-          {showValid ? (
+        const score = zxcvbn(value);
+        const isValid = score.score === 4 && (typeof match !== 'string' || match === value);
+        return (
@@ -145 +87,7 @@ class PasswordInput extends React.PureComponent {
-              className={classNames(css.valid, isValid ? css.isValid : null)}
+                className={classNames(
+                    css.input,
+                    css.padded,
+                    disabled ? css.disabled : null,
+                    capsLock ? css.capsLock : null,
+                )}
+                style={this.props.style ? this.props.style : {}}
@@ -147 +95,39 @@ class PasswordInput extends React.PureComponent {
-              <Icon icon="tickRound" size={26} />
+                <fieldset>
+                    <a className={hidden ? css.strike : null} onClick={this.setVisibility}>
+                        <Icon icon="eye" size={16} />
+                    </a>
+                    <input
+                        type={hidden ? 'password' : 'text'}
+                        ref={(input) => {
+                            this.input = input;
+                        }}
+                        value={value}
+                        onClick={this.setCapsLock}
+                        onKeyDown={this.setCapsLock}
+                        onChange={(e) => onChange(e.target.value)}
+                    />
+                    <small>{label}</small>
+                    <strong>
+                        {/* <Icon icon="attention" size={14} /> */}
+                        {t('capsLockIsOn')}
+                    </strong>
+                    {showScore ? (
+                        <React.Fragment>
+                            <div className={css.score} data-strength={score.score}>
+                                <span />
+                                <span />
+                                <span />
+                            </div>
+                            {value.length > 8 && passwordReasons[score.feedback.warning] ? (
+                                <div className={css.hint}>
+                                    {t(`changePassword:${passwordReasons[score.feedback.warning]}`)}
+                                </div>
+                            ) : null}
+                        </React.Fragment>
+                    ) : null}
+                    {showValid ? (
+                        <div className={classNames(css.valid, isValid ? css.isValid : null)}>
+                            <Icon icon="tickRound" size={26} />
+                        </div>
+                    ) : null}
+                </fieldset>
@@ -149,5 +135,2 @@ class PasswordInput extends React.PureComponent {
-          ) : null}
-        </fieldset>
-      </div>
-    );
-  }
+        );
+    }
