diff a/src/desktop/src/ui/global/updateWallet.js b/src/desktop/src/ui/global/updateWallet.js	(rejected hunks)
@@ -1,3 +1,3 @@
-import React from "react";
-import PropTypes from "prop-types";
-import { withI18n } from "react-i18next";
+import React from 'react';
+import PropTypes from 'prop-types';
+import { withI18n } from 'react-i18next';
@@ -5,2 +5,2 @@ import { withI18n } from "react-i18next";
-import Progress from "ui/components/progress";
-import Modal from "ui/components/modal/Modal";
+import Progress from 'ui/components/progress';
+import Modal from 'ui/components/modal/Modal';
@@ -9,3 +9,3 @@ export class UpdateWallet extends React.PureComponent {
-  static propTypes = {
-    t: PropTypes.func.isRequired
-  };
+    static propTypes = {
+        t: PropTypes.func.isRequired,
+    };
@@ -13,3 +13,3 @@ export class UpdateWallet extends React.PureComponent {
-  state = {
-    progress: null
-  };
+    state = {
+        progress: null,
+    };
@@ -17,5 +17,5 @@ export class UpdateWallet extends React.PureComponent {
-  componentDidMount() {
-    this.onStatusChange = this.statusChange.bind(this);
-    // eslint-disable-next-line no-undef
-    Electron.onEvent("update.progress", this.onStatusChange);
-  }
+    componentDidMount() {
+        this.onStatusChange = this.statusChange.bind(this);
+        // eslint-disable-next-line no-undef
+        Electron.onEvent('update.progress', this.onStatusChange);
+    }
@@ -23,4 +23,4 @@ export class UpdateWallet extends React.PureComponent {
-  componentWillUnmount() {
-    // eslint-disable-next-line no-undef
-    Electron.removeEvent("update.progress", this.onStatusChange);
-  }
+    componentWillUnmount() {
+        // eslint-disable-next-line no-undef
+        Electron.removeEvent('update.progress', this.onStatusChange);
+    }
@@ -28,37 +28,32 @@ export class UpdateWallet extends React.PureComponent {
-  /**
-   * Update progress percentage state
-   * @param {object} progress - Current update progress percent
-   */
-  statusChange(progress) {
-    this.setState({
-      progress
-    });
-  }
-  render() {
-    const { t } = this.props;
-    const { progress } = this.state;
-    return (
-      <Modal
-        variant="global"
-        isOpen={progress ? true : false}
-        onClose={() => {}}
-      >
-        <form>
-          <h1>{t("updates:downloadingUpdate")}</h1>
-          <article>
-            {progress && (
-              <Progress
-              type={"update"}
-                progress={progress.percent}
-                title={t("updates:downloadProgress", {
-                  transferred:
-                    (progress.transferred / 1048576).toFixed(2) + " MB",
-                  total: (progress.total / 1048576).toFixed(2) + " MB"
-                })}
-              />
-            )}
-          </article>
-        </form>
-      </Modal>
-    );
-  }
+    /**
+     * Update progress percentage state
+     * @param {object} progress - Current update progress percent
+     */
+    statusChange(progress) {
+        this.setState({
+            progress,
+        });
+    }
+    render() {
+        const { t } = this.props;
+        const { progress } = this.state;
+        return (
+            <Modal variant="global" isOpen={progress ? true : false} onClose={() => {}}>
+                <form>
+                    <h1>{t('updates:downloadingUpdate')}</h1>
+                    <article>
+                        {progress && (
+                            <Progress
+                                type={'update'}
+                                progress={progress.percent}
+                                title={t('updates:downloadProgress', {
+                                    transferred: (progress.transferred / 1048576).toFixed(2) + ' MB',
+                                    total: (progress.total / 1048576).toFixed(2) + ' MB',
+                                })}
+                            />
+                        )}
+                    </article>
+                </form>
+            </Modal>
+        );
+    }
